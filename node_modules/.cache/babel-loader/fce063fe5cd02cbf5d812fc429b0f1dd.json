{"ast":null,"code":"var _jsxFileName = \"/Users/emran/Desktop/\\u0447\\u0430\\u0442/chat/src/components/AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Context } from '..';\nimport { privateRoutes, publicRoutes } from '../routes';\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/consts';\nimport { useAuthState } from 'react-firb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    auth\n  } = useContext(Context);\n  const [user] = useAuthState();\n  return user ? /*#__PURE__*/_jsxDEV(Switch, {\n    children: [privateRoutes.map(({\n      path,\n      Component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: Component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: CHAT_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n    children: [publicRoutes.map(({\n      path,\n      Component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: Component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: LOGIN_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"6XEWKdTBSJBDvGI7H2d//dFVH8c=\", false, function () {\n  return [useAuthState];\n});\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/emran/Desktop/чат/chat/src/components/AppRouter.js"],"names":["React","useContext","Route","Switch","Redirect","Context","privateRoutes","publicRoutes","CHAT_ROUTE","LOGIN_ROUTE","useAuthState","AppRouter","auth","user","map","path","Component"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAwBC,QAAxB,QAAuC,kBAAvC;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,WAA5C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;AACA,SAAQC,YAAR,QAA2B,YAA3B;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA;AAAD,MAASX,UAAU,CAACI,OAAD,CAAzB;AACA,QAAM,CAACQ,IAAD,IAASH,YAAY,EAA3B;AACA,SAAOG,IAAI,gBAEP,QAAC,MAAD;AAAA,eACKP,aAAa,CAACQ,GAAd,CAAkB,CAAC;AAACC,MAAAA,IAAD;AAAQC,MAAAA;AAAR,KAAD,kBACX,QAAC,KAAD;AAAoB,MAAA,IAAI,EAAID,IAA5B;AAAkC,MAAA,SAAS,EAAIC,SAA/C;AAA0D,MAAA,KAAK,EAAE;AAAjE,OAAcD,IAAd;AAAA;AAAA;AAAA;AAAA,YADP,CADL,eAII,QAAC,QAAD;AAAU,MAAA,EAAE,EAAIP;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFO,gBAWP,QAAC,MAAD;AAAA,eACKD,YAAY,CAACO,GAAb,CAAiB,CAAC;AAACC,MAAAA,IAAD;AAAQC,MAAAA;AAAR,KAAD,kBACV,QAAC,KAAD;AAAoB,MAAA,IAAI,EAAID,IAA5B;AAAkC,MAAA,SAAS,EAAIC,SAA/C;AAA0D,MAAA,KAAK,EAAE;AAAjE,OAAcD,IAAd;AAAA;AAAA;AAAA;AAAA,YADP,CADL,eAII,QAAC,QAAD;AAAU,MAAA,EAAE,EAAIN;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ;AAkBH,CArBD;;GAAME,S;UAEaD,Y;;;KAFbC,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport {Route, Switch,  Redirect} from 'react-router-dom'\nimport { Context } from '..';\nimport { privateRoutes, publicRoutes } from '../routes';\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/consts';\nimport {useAuthState} from 'react-firb'\n\n\nconst AppRouter = () => {\n    const {auth} = useContext(Context)\n    const [user] = useAuthState()\n    return user ? \n    (\n        <Switch>\n            {privateRoutes.map(({path , Component}) =>\n                    <Route key = {path} path = {path} component = {Component} exact={true} />\n            )}\n            <Redirect to = {CHAT_ROUTE}/>\n        </Switch>    \n    )\n    :\n    (\n        <Switch>\n            {publicRoutes.map(({path , Component}) =>\n                    <Route key = {path} path = {path} component = {Component} exact={true} />\n            )}\n            <Redirect to = {LOGIN_ROUTE}/>\n        </Switch>\n    );\n}\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}